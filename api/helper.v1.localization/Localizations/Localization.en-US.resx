<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Activity_IsNotExist" xml:space="preserve">
    <value>The page with the specified parameters does not exist</value>
  </data>
  <data name="BoxDescription_IsNotValid" xml:space="preserve">
    <value>Keyboard box description is not valid. Allowed characters: letters, numbers. Min. length is 3 characters</value>
  </data>
  <data name="BoxTitle_IsBusy" xml:space="preserve">
    <value>A keyboard box with the given name already exists on the current account</value>
  </data>
  <data name="BoxTitle_IsNotValid" xml:space="preserve">
    <value>Keyboard box name is not valid. Allowed characters: letters, numbers. Min. length is 3 characters</value>
  </data>
  <data name="BoxType_IsNotExist" xml:space="preserve">
    <value>The type of keyboard box with the given parameters does not exist</value>
  </data>
  <data name="EmailCode_IsNotExist" xml:space="preserve">
    <value>The registration confirmation code with the specified parameters does not exist</value>
  </data>
  <data name="EmailCode_IsSuccessfullSend" xml:space="preserve">
    <value>The registration confirmation code was successfully sent to the specified e-mail address</value>
  </data>
  <data name="EmailVerification_EmailLabel" xml:space="preserve">
    <value>KeyLab. Mail confirmation code</value>
  </data>
  <data name="EmailVerification_EmailText" xml:space="preserve">
    <value>&lt;h3&gt;Mail confirmation code to register on the platform&lt;/h3&gt;&lt;b&gt;{0}&lt;/b&gt;&lt;p&gt;The code will be active for 5 minutes.&lt;/p&gt;&lt;p&gt;This email was automatically generated. You do not need to respond to it.&lt;/p&gt;</value>
  </data>
  <data name="Email_SendVerificationCode" xml:space="preserve">
    <value>The account confirmation code was successfully sent to the specified email address</value>
  </data>
  <data name="File_IsNotAttached" xml:space="preserve">
    <value>The file is corrupted or was not attached</value>
  </data>
  <data name="File_IsNotExist" xml:space="preserve">
    <value>The file with the specified parameters does not exist</value>
  </data>
  <data name="File_IsSuccessfullDeleted" xml:space="preserve">
    <value>The file was successfully deleted</value>
  </data>
  <data name="File_IsSuccessfullUpdated" xml:space="preserve">
    <value>The file has been successfully updated</value>
  </data>
  <data name="File_IsSuccessfullUploaded" xml:space="preserve">
    <value>The file was successfully saved</value>
  </data>
  <data name="Interval_IsNotExist" xml:space="preserve">
    <value>There is no time interval with the specified parameters</value>
  </data>
  <data name="KeyboardDescription_IsNotValid" xml:space="preserve">
    <value>Keyboard description is not valid. Allowed characters: letters, numbers. Min. length is 3 characters</value>
  </data>
  <data name="KeyboardTitle_IsBusy" xml:space="preserve">
    <value>A keyboard with the specified name already exists on the current account</value>
  </data>
  <data name="KeyboardTitle_IsNotValid" xml:space="preserve">
    <value>Keyboard name is not valid. Allowed characters: letters, numbers. Min. length is 3 characters</value>
  </data>
  <data name="Keycap_IsNotExist" xml:space="preserve">
    <value>The key with the specified parameters does not exist</value>
  </data>
  <data name="KitTitle_IsNotValid" xml:space="preserve">
    <value>The name of the keycap set is not valid. Allowed characters: letters, numbers. Min. length is 3 characters</value>
  </data>
  <data name="Kit_IsNotExist" xml:space="preserve">
    <value>There is no set of keycaps with the given parameters</value>
  </data>
  <data name="PaginationPageSize_NotValid" xml:space="preserve">
    <value>Page size is not valid</value>
  </data>
  <data name="PaginationPage_NotValid" xml:space="preserve">
    <value>Page number is not valid</value>
  </data>
  <data name="Preview_IsNotAttached" xml:space="preserve">
    <value>The file preview is corrupted or was not attached</value>
  </data>
  <data name="Stats_LeftDateGreaterThanRightDate" xml:space="preserve">
    <value>The left period date is larger than the right period date</value>
  </data>
  <data name="SwitchType_IsNotExist" xml:space="preserve">
    <value>The type of switch with specified parameters does not exist</value>
  </data>
  <data name="UserAccessToken_IsExpired" xml:space="preserve">
    <value>Access token is expired or damaged. Go through the authorization process again</value>
  </data>
  <data name="UserEmail_IsBusy" xml:space="preserve">
    <value>The specified mail is already occupied by another user</value>
  </data>
  <data name="UserEmail_IsNotValid" xml:space="preserve">
    <value>The mail is not valid. Example: ivanov@mail.ru</value>
  </data>
  <data name="UserNickname_IsNotValid" xml:space="preserve">
    <value>Nickname is not valid. Allowed characters: letters, numbers. Min. length is 3 characters</value>
  </data>
  <data name="UserPasswords_IsNotEqual" xml:space="preserve">
    <value>Passed password values do not match</value>
  </data>
  <data name="UserPassword_IsNotValid" xml:space="preserve">
    <value>Password is not valid. Allowed characters: letters, numbers. Min. length is 8 characters</value>
  </data>
  <data name="UserRefreshToken_IsExpired" xml:space="preserve">
    <value>Refresh token is expired or damaged. Go through the authorization process again</value>
  </data>
  <data name="UserSignIn_EmailLabel" xml:space="preserve">
    <value>The account has been logged in</value>
  </data>
  <data name="UserSignIn_EmailText" xml:space="preserve">
    <value>You have logged into your account on the KeyLab platform. If it was not you, change your password</value>
  </data>
  <data name="UserSignUp_IsSuccessfull" xml:space="preserve">
    <value>The new account was successfully registered</value>
  </data>
  <data name="User_IsNotBoxOwner" xml:space="preserve">
    <value>The current user does not own the box with the specified parameters</value>
  </data>
  <data name="User_IsNotExist" xml:space="preserve">
    <value>The user with the specified parameters does not exist</value>
  </data>
  <data name="User_IsNotKeyboardOwner" xml:space="preserve">
    <value>The current user does not own a keyboard with the specified parameters</value>
  </data>
  <data name="User_IsNotKitOwner" xml:space="preserve">
    <value>The current user does not own the set of keycaps with the specified parameters</value>
  </data>
</root>