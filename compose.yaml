version: "3.9"
services:
  api_proxy:
    container_name: api_proxy
    restart: always
    depends_on:
      - api_main
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.api.proxy
    entrypoint: [ "dotnet", "api.v1.proxy.dll" ]
    ports:
      - 6001:8080
    volumes:
      - ./configurations:/configurations

  api_main:
    container_name: api_main
    restart: always
    depends_on:
      - rabbitmq
      - db_main
      - redis_main
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.api.main
    entrypoint: [ "dotnet", "api.v1.main.dll" ]
    ports:
      - 6002:8080
    volumes:
      - ./api/logs/main:/logs/main
      - ./files:/files
      - ./configurations:/configurations

  api_email:
    container_name: api_email
    restart: always
    depends_on:
      - rabbitmq
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.api.email
    entrypoint: [ "dotnet", "api.v1.email.dll" ]
    ports:
      - 6003:8080
    volumes:
      - ./configurations:/configurations

  db_main:
    container_name: db_main
    image: postgres:16.0
    restart: always
    environment:
      POSTGRES_DB: main
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 6011:5432
    volumes:
      - ./postgres/main/data:/var/lib/postgresql/data
      - ./postgres/main/create.sql:/docker-entrypoint-initdb.d/create.sql

  redis_main:
    container_name: redis_main
    image: redis:7.2.4
    restart: always
    environment:
      - REDIS_PASSWORD=admin
      - REDIS_PORT=6379
      - REDIS_DATABASES=16
    command:
      --port 6021
    ports:
      - 6021:6021
    expose:
      - 6021
    volumes:
      - ./redis/main/data:/root/redis
      - ./redis/main/redis.conf:/usr/local/ets/redis/redis.conf

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.13.0-management
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - 6031:6031
      - 6032:6032
    volumes:
      - ./rabbitmq/data/:/var/lib/rabbitmq/
      - ./rabbitmq/log/:/var/log.rabbitmq/
      - ./rabbitmq/rabbit.conf:/etc/rabbitmq/rabbitmq.conf

  adminer:
    container_name: adminer
    image: adminer:4.8.1
    restart: always
    ports:
      - 6041:8080